return {
  -- Copilot
  -- {
  --   "zbirenbaum/copilot.lua",
  --   cmd = "Copilot",
  --   event = "InsertEnter",
  --   config = function()
  --     require("copilot").setup({
  --       suggestion = {
  --         enabled = true,
  --         auto_trigger = true,
  --         keymap = {
  --           accept = "<Tab>",
  --         },
  --       },
  --     })
  --   end,
  -- },
  -- {
  --   "olimorris/codecompanion.nvim",
  --   event = "VeryLazy",
  --   dependencies = {
  --     "nvim-lua/plenary.nvim",
  --     "nvim-treesitter/nvim-treesitter",
  --     "saghen/blink.cmp", -- Optional: For using slash commands and variables in the chat buffer
  --     "nvim-telescope/telescope.nvim", -- Optional: For using slash commands
  --     { "MeanderingProgrammer/render-markdown.nvim", ft = { "markdown", "codecompanion" } }, -- Optional: For prettier markdown rendering
  --     { "stevearc/dressing.nvim", opts = {} }, -- Optional: Improves `vim.ui.select`
  --   },
  --   config = function()
  --     require("codecompanion").setup({
  --       strategies = {
  --         chat = {
  --           adapter = "copilot",
  --         },
  --         inline = {
  --           adapter = "copilot",
  --         },
  --       },
  --       -- adapters = {
  --       -- anthropic = function()
  --       --   return require("codecompanion.adapters").extend("anthropic", {
  --       --     env = {
  --       --       api_key = anthApiKey,
  --       --     },
  --       --   })
  --       -- end,
  --       -- },
  --     })
  --     -- Keymap for copying text in chat buffer instead of close it
  --     vim.api.nvim_create_autocmd("FileType", {
  --       pattern = "codecompanion",
  --       callback = function()
  --         vim.keymap.set("n", "<C-c>", '"+y', { buffer = true, desc = "Copy text in chat" })
  --       end,
  --     })
  --   end,
  -- },
}
